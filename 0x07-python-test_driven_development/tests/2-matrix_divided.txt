The "2-matrix_divided" module
=============================

This module defines a matrix division function "matrix_divided(matrix, div)"


Example Usage:
==============

Importing module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


=== Test Cases ===

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


#note that the original matrix is not modified
>>> matrix
[[1 2, 3], [4, 5, 6]]


# More complex matrix
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2], [1.4, 1.6, 1.8]]
>>> matrix_divided([[-4, 0.3, 10.21], [23, 5.6, -69.21], [-23, -8.1, 39]], 6)
[[-0.67, 0.05, 1.7], [3.83, 0.93, -11.53], [-3.83, -1.35, 6.5]]
>>> matrix_divided([[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]])
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]


Invalid Matrices
================

The parameter ``matrix`` must be a list of lists consisting of either
ints or floats. If ``matrix`` is not a list, a TypeError is raised.


#Not a list
>>> matrix = "not a list"
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#Empty list
>>> matrix = None
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[]]
>>> matrix_divided(matrix, 3)
[[]]

# Note that an empty list will raise the TypeError. But an empty list of lists will succeed.


>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Note an identical TypeError is raised if ``matrix`` is not specifically a list of lists.


>>> matrix = [[1, 2, 3], [4, "not a number", 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Note The same TypeError is raised yet again if any elements in ``matrix`` are neither ints nor floats.


# All the rows in `matrix` must be the same size. If any rows are of different sizes, a new TypeError is raised.

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

The parameter ``div`` must be either an int or float. Otherwise, a TypeError
is raised.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

``div`` must also be non-zero. Otherwise, a ZeroDivisionError is raised.

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


